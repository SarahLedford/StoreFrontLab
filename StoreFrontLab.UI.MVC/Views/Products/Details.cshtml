@model StoreFrontLab.DATA.EF.Product

@{
    ViewBag.Title = Model.ProdName + " Details";
}

<h2>@ViewBag.Title</h2>
<hr />
<div class="row">
    <dl class="dl-horizontal col-md-7">
        <dt>
            @Html.DisplayNameFor(model => model.ProdName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ProdName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Price)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Price)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd class="description">
            @Html.DisplayFor(model => model.Description)
        </dd>


        @if (Model.Artist != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.Artist.ArtistName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Artist.ArtistName)
            </dd>
        }


        <dt>
            @Html.DisplayNameFor(model => model.Category.CategoryName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Category.CategoryName)
        </dd>

        @if (Model.MovieGenre != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.MovieGenre.MovieGenreName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MovieGenre.MovieGenreName)
            </dd>
        }

        @if (Model.MusicGenre != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.MusicGenre.MusicGenreName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MusicGenre.MusicGenreName)
            </dd>
        }


        <dt>
            @Html.DisplayNameFor(model => model.Status.StatusName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Status.StatusName)
        </dd>

        @if (Model.Studio != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.Studio.StudioName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Studio.StudioName)
            </dd>
        }


    </dl>
    <p>
        @* Html.BeginForm(action, controller, route values, FormMethod, htmlattributes) *@
        @using (Html.BeginForm("AddToCart", "Products", new { @prodID = Model.ProdID }, FormMethod.Post, new { @class = "text-center" }))
        {
            @Html.HiddenFor(x => x.ProdID)
            <span class="label">Quantity:</span>
            @Html.TextBox("Qty", 1, new { @class = "form-control", style = "max-width:50px;display:inline;" })
            <input type="submit" value="Add to Cart" class="btn btn-info" name="qty" />
        }
    </p>
    <div class="col-md-4 offset-1">
        <dl>
            <dt>
                @*@Html.DisplayNameFor(model => model.ProductImage)*@
            </dt>

            <dd>
                <img src="~/Content/img/shop/@Model.ProductImage" alt="@Model.ProductImage" title="@Model.ProductImage" />

                @*@Html.DisplayFor(model => model.ProductImage)*@
            </dd>
        </dl>
    </div>


</div>

    

<p>
    @if (User.IsInRole("Admin") || User.IsInRole("Employee"))
    {
        @:@Html.ActionLink("Edit", "Edit", new { id = Model.ProdID }) |

    }
    @Html.ActionLink("Back to Shop", "Index")
</p>
